Table: Logs

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| num         | varchar |
+-------------+---------+
id is the primary key for this table.
 

Write an SQL query to find all numbers that appear at least three times consecutively.

Return the result table in any order.

The query result format is in the following example:

 

Logs table:
+----+-----+
| Id | Num |
+----+-----+
| 1  | 1   |
| 2  | 1   |
| 3  | 1   |
| 4  | 2   |
| 5  | 1   |
| 6  | 2   |
| 7  | 2   |
+----+-----+

Result table:
+-----------------+
| ConsecutiveNums |
+-----------------+
| 1               |
+-----------------+
1 is the only number that appears consecutively for at least three times.



# look at the first two methods which are better
select distinct l1.num as ConsecutiveNums 
from logs l1 
left join logs l2
on l1.num = l2.num 
where l1.id -l2.id between 0 and 2
group by l1.id, l1.num
having count(*) >= 3


select distinct num as ConsecutiveNums 
from (
select num,  
row_number() over (order by id) - row_number() over (partition by Num order by id) as diff
from 
logs ) t
group by num, diff 
having count(diff) >= 3




# method 1

SELECT DISTINCT l1.Num AS ConsecutiveNums
FROM
    Logs l1
inner join 
    Logs l2
on l2.Id - l1.Id = 1
and l1.Num = l2.Num
inner join 
    Logs l3
on l3.Id - l2.Id = 1 
and l2.Num = l3.Num




# method 2
select distinct num as ConsecutiveNums
from (
    select num, 
        lead(num, 1) over() as num1,
        lead(num, 2) over() as num2
    from logs
) c
where c.num = c.num1 and c.num1 = c.num2;












